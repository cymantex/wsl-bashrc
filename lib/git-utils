#!/bin/bash

#########################
# Git
#########################

# Branches
function gitCreateBranchToMaster() {
  git branch $1
  git checkout $1
  git branch --set-upstream-to=origin/"$(getMasterBranchName)"
  echo "git branch"
  git branch
}

function gitRenameBranchAndSetUpstreamToMaster() {
  git branch -m "$1"
  git branch --set-upstream-to=origin/"$(getMasterBranchName)"
  echo "git branch"
  git branch
}

function getMasterBranchName() {
  if [[ $(git branch | grep "main") != "" ]]; then
    echo "main"
  else
    echo "master"
  fi
}

function gitRemoveBranchByRegex() {
  git branch | grep $1 | xargs git branch -D
}

function gitRemoveReviewBranches() {
  gitRemoveBranchByRegex "change-*"
  gitRemoveBranchByRegex "review/*" # Old review branch name
}

# Pull / Push / Commit
function gitStashPull() {
  git add .
  git stash save
  git pull --rebase

  if [[ $? == 0 ]]; then
    git stash pop
  fi
}

function gitAmend() {
  git add .
  git commit --amend --no-edit
}

function gitPush() {
  git pull --rebase

  if [[ $? == 0 ]]; then
    git push
  fi
}

function gitAmendPush() {
  gitAmend && gitPush
}

function gitSquash() {
  if [[ $# -ne 1 ]]; then
    echo "Usage: gitSquash <commit_message>"
    return
  fi

  git reset --soft origin/"$(getMasterBranchName)"
  git commit -am $1
}

# Other
function gitRemoveAllChanges() {
  git stash save
  git stash drop
  git checkout .
  git clean -fd
}
